name: QvPlugin Build Action Qt6

on:
  workflow_dispatch:
    branches: [master]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Get the version
        id: get_version
        shell: bash
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Get Plugin Name
        id: get_name
        shell: bash
        run: echo ::set-output name=NAME::QvPlugin-WinNetFilter

      - name: Checking out sources
        uses: actions/checkout@master
        with:
          submodules: recursive

      - name: Install Python 3.7 version
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'

      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.2
          arch: x64

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: 6.2.0
          arch: win64_msvc2019_64
          aqtversion: ==1.2.2

      - name: Install Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.0.2

      - name: Build
        shell: bash
        env:
          CC: cl.exe
          CXX: cl.exe
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -A x64
          cmake --build . --parallel $(nproc) --config Release

      - name: Create Tools 7z
        uses: DuckSoft/create-7z-action@v1.0
        with:
          pathSource: build/Release/
          pathTarget: build.7z


      # - name: Uploading artifact
      #   uses: actions/upload-artifact@master
      #   with:
      #     name: ${{ steps.get_name.outputs.NAME }}-${{ github.sha }}.Windows.7z
      #     path: build.7z

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build.7z
          asset_name: ${{ steps.get_name.outputs.NAME }}.${{ steps.get_version.outputs.VERSION }}.Windows.Qt6.7z
          tag: release
          overwrite: true
